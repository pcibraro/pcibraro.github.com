---
layout: post
title: "Telesharp – An Application Repository for .NET applications"
date: 2011-06-30
comments: true
categories: .NET
---

A year ago, we released SO-Aware as our first product in Tellago
Studios. SO-Aware represented a new way to manage web services and all
the related artifacts like configuration, tests or monitoring data in
the Microsoft stack. It was based on the idea of using a lightweight SOA
governance approach with a central repository exposed through RESTful
services.

At that point, we thought the same idea could be extended to enterprise
applications in general by providing a generic repository for many of
the runtime or design time artifacts generated during the development
like configuration, application description or topology (a high level
view of the components that made up a system), logging information or
binaries. It took us several months to give a form to that idea and
implement it as a product, but it is finally here and I am very proud to
announce the release today under the name of “TeleSharp”.

Telesharp provides in a nutshell the following features,

​1. Configure your application topology in a central repository.
Application topology in this context means that you can decompose your
application and describe it in terms of components and how they interact
each other. For example, you can tell that the CRM system is made up of
a couple of WCF services and a ASP.NET MVC front end.

​2. Centralize configuration for your applications and components.  You
can import existing .NET configuration sections into the repository and
associate them to the different components. In addition, environment
overrides are supported for the configuration sections. We provide
tooling and extensions in Visual Studio for managing all the
configuration, and a set of powershell commands for automating the
configuration deployment.

​3. Browse all the assemblies and types remotely in your application
servers in a web browser using an interface similar to any of the
existing .NET reflection tools. You can easily determine this way
whether the server is running the correct version of your applications.

​4. Centralize logging and exception management into the repository. You
get different reports and a pivot viewer experience for browsing all the
different logging information generated by your applications. In
addition, TeleSharp provides different providers for pushing the logging
information to the central repository using well-known frameworks like
ELMAH, Log4Net, EntLib or even Windows ETW. 

[![TeleSharp](http://weblogs.asp.net/blogs/cibrax/TeleSharp_thumb_5AB506E8.jpg "TeleSharp")](http://weblogs.asp.net/blogs/cibrax/TeleSharp_07AA69C4.jpg)

The central repository itself is implemented as a set of OData services
that any application can easily consume using regular Http. You can read
more details in this introductory
[post](http://tellagostudios.com/bringing-true-agility-enterprise-net-tellago-studios-announces-telesharp)

If you think this product can be a good fit in your organization, you
can request a trial version in our [Tellago
Studios](http://www.tellagostudios.com) website.

